{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","getNodeToArray","node","sum","push","childNodes","isContentditor","console","log","getAttribute","isDOMList$1","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","FontSize","LineHeight","FontName","config","fontNames","map","fontName","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","colors","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","eventList","prototype","constructor","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","val","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","str","langArgs","reg","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","_useStyleWithCSS","execCommand","getRange","$parent","lineHeight","nodeArray","shift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","startNodeIndex","endNodeIndex","$start","getSelectionStartElem","$end","getSelectionEndElem","$pNodes","rangeNodes","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","changeActive","saveRange","change","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$targetELem","$startElem","$endElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\r\n    poly-fill\r\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\r\n    DOM 操作 API\r\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\r\n    配置信息\r\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'lineHeight', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n};\n\n/*\r\n    工具\r\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n//递归获取所有子节点\nfunction getNodeToArray(node, sum) {\n    if (node.nodeType === 1) {\n        sum.push(node);\n    }\n    var children = node.childNodes;\n    for (var i = 0; i < children.length; i++) {\n        getNodeToArray(children[i], sum);\n    }\n}\n\nfunction isContentditor(node) {\n    console.log(node.getAttribute('contenteditable'));\n    if (node.getAttribute('contenteditable') == 'true') {\n        return true;\n    }\n    return false;\n}\nfunction isDOMList$1(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n/*\r\n    bold-menu\r\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    替换多语言\r\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\r\n    droplist\r\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\r\n    menu - header\r\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - fontSize\r\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\r\n    menu - fontSize\r\n*/\n\n// // 是否是 DOM List\n// function isDOMList(selector) {\n//     if (!selector) {\n//         return false\n//     }\n//     if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n//         return true\n//     }\n//     return false\n// }\n\n// //递归获取所有子节点\n//  function getNodeToArray(node, sum) {\n//     if (node.nodeType === 1) {\n//         sum.push(node);\n//     }\n//     var children = node.childNodes;\n//     for (var i = 0; i < children.length; i++) {\n//         getNodeToArray(children[i], sum)\n//     }\n// }\n//\n//  function isContentditor(node) {\n//     console.log(node.getAttribute('contenteditable'))\n//     if (node.getAttribute('contenteditable') == 'true') {\n//         return true;\n//     }\n//     return false;\n// }\n\n//行高\nfunction LineHeight(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    this._active = false;\n\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>行高</p>'),\n        type: 'list',\n        list: [{\n            $elem: $('<span style=\"line-height: 1 ;\">1倍</span>'),\n            value: '1'\n        }, {\n            $elem: $('<span style=\"line-height: 1.5 ;\">1.5倍</span>'),\n            value: '1.5'\n        }, {\n            $elem: $('<span style=\"line-height: 1.8 ;\">1.8倍</span>'),\n            value: '1.8'\n        }, {\n            $elem: $('<span style=\"line-height: 2;\">2倍</span>'),\n            value: '2'\n        }, {\n            $elem: $('<span style=\"line-height: 2.5 ;\">2.5倍</span>'),\n            value: '2.5'\n        }, { $elem: $('<span style=\"line-height: 3;\">3倍</span>'),\n            value: '3'\n        }],\n        onClick: function onClick(value) {\n            _this._command(value);\n        }\n    });\n}\n\nLineHeight.prototype = {\n    constructor: LineHeight,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        //1. 处理选区节点样式\n        var $parent = editor.selection.getSelectionContainerElem()[0];\n        console.log($parent);\n        //1.1 如果选区只有一行\n        if (isDOMList$1($parent) === false && $parent.nodeType === 1 && isContentditor($parent) == false) {\n            while ($parent.nodeName != 'P') {\n                //提升节点至外层p段落\n                $parent = $parent.parentNode;\n            }\n            $parent.style.lineHeight = value;\n            //1.1.1 一行的选区也可能有嵌套元素\n            var nodeArray = new Array();\n            getNodeToArray($parent, nodeArray);\n            nodeArray.shift();\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = nodeArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var node = _step.value;\n\n                    node.style.lineHeight = value;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        } else {\n            //1.2 如果选区有多行\n            var $start = editor.selection.getSelectionStartElem()[0];\n            var $end = editor.selection.getSelectionEndElem()[0];\n\n            var startNodeIndex;\n            var endNodeIndex;\n\n            //获取编辑区域下的所有节点\n            var nodeArray = new Array();\n            getNodeToArray($parent, nodeArray);\n            nodeArray.shift();\n\n            //1.3 处理选区内的节点及其子节点\n            var $pNodes = nodeArray;\n            console.log($pNodes);\n            for (var i = 0; i < $pNodes.length; i++) {\n                if ($pNodes[i] == $start) {\n                    startNodeIndex = i;\n                    break;\n                }\n            }\n            for (var i = 0; i < $pNodes.length; i++) {\n                if ($pNodes[i] == $end) {\n                    endNodeIndex = i;\n                    break;\n                }\n            }\n            var rangeNodes = new Array();\n            for (var i = startNodeIndex; i <= endNodeIndex; i++) {\n                rangeNodes.push($pNodes[i]);\n            }\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = rangeNodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var node = _step2.value;\n\n                    node.style.lineHeight = value;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    }\n};\n\n/*\r\n    menu - fontName\r\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\r\n    panel\r\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\r\n    menu - link\r\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    italic-menu\r\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    redo-menu\r\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\r\n    strikeThrough-menu\r\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    underline-menu\r\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    undo-menu\r\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\r\n    menu - list\r\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - justify\r\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\r\n    menu - Forecolor\r\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\r\n    menu - BackColor\r\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\r\n    menu - quote\r\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - code\r\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - emoticon\r\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\r\n    menu - table\r\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - video\r\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\r\n    menu - img\r\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    所有菜单的汇总\r\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.lineHeight = LineHeight;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\r\n    菜单集合\r\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\r\n    粘贴信息的处理\r\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\r\n    编辑区域\r\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\r\n    命令，封装 document.execCommand\r\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\r\n    selection range API\r\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\r\n    上传进度条\r\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\r\n    上传图片\r\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\r\n    编辑器构造函数\r\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}